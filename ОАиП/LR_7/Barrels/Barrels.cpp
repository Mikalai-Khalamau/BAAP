#include <iostream>

bool isLongLong(long long& number) {
    std::cin >> number;
    if (std::cin.fail()) {
        std::cin.clear();
        std::cin.ignore(10000, '\n');
        return false;
    }
    if (std::cin.peek() != '\n') {
        std::cin.clear();
        std::cin.ignore(10000, '\n');
        return false;
    }
    return true;
}

void input(long long& n) {
    std::cout << "Введите номер бочки,которую хотите отравить - целое число,которое находится в диапазоне от 0 до 239:\n";
    while (true) {
        if (isLongLong(n) && n <240) {
            break;
        }
        else {
            std::cout << "Неверный ввод,попробуйте еще раз\n";
        }
    }
    }

std::string decimalToTernary(int num) {
    if (num == 0) return "00000"; // Обработка случая 0

    std::string result;
    while (num > 0) {
        int remainder = num % 3; // Остаток от деления на 3
        result = std::to_string(remainder) + result; // Добавляем к результату
        num /= 3; // Целочисленное деление на 3
    }

    // Добавление лидирующих нулей до 5 разрядов
    while (result.length() < 5) {
        result = "0" + result;
    }

    return result; // Возвращаем троичное представление
}

// Функция для вычисления степени
double myPow(double base, int exponent) {
    double result = 1.0; // Инициализируем результат

    // Обработка отрицательной степени
    bool isNegative = exponent < 0;
    if (isNegative) {
        exponent = -exponent; // Делаем степень положительной
    }

    // Цикл для умножения
    for (int i = 0; i < exponent; ++i) {
        result *= base; // Умножаем на основание
    }

    // Если степень была отрицательной, возвращаем обратное значение
    return isNegative ? 1.0 / result : result;
}

int ternaryToDecimal(const std::string &ternary) {
    int result = 0;
    int length = ternary.length();

    for (int i = 0; i < length; ++i) {
        int digit = ternary[length - 1 - i] - '0'; // Преобразуем символ в число
        result += digit * myPow(3, i); // Умножаем на 3 в степени позиции
    }
    return result; // Возвращаем десятичное представление
}

// Функция для отображения контекстного меню
void displayContextMenu() {
    std::cout << "Лабораторная работа №7, задание №5\n"; // O(1)
    std::cout << "Суть задания:\n"; // O(1)
    std::cout << "Патриций решил устроить праздник и для этого приготовил 240 бочек вина. "
              << "Однако к нему пробрался недоброжелатель по имени Пользователь, который подсыпал яд в одну из бочек. "
              << "Про яд известно, что человек, который его выпил, умирает в течение 24 часов. "
              << "До праздника осталось два дня, то есть 48 часов. "
              << "У Патриция есть пять рабов, которыми он готов пожертвовать, чтобы узнать, в какой именно бочке яд. "
              << "Подойдите к заданию творчески и найдите способ определения отравленной бочки с ядом.\n"; // O(1)
    std::cout << "Выполнил студент группы 453503 Халамов Николай\n"; // O(1)
}

int main() {
    displayContextMenu();
    std::cout << "Суть моего решения состоит в том, чтобы перевести номер бочки из десятичной системы счисления в троичную.\n";
    std::cout << "Мы получим число, содержащее 5 разрядов, так как числа от 0 до 242 представимы в виде уникальных наборов 0,1,2, ведь 2^5=243, а у нас 240<243 бочек.\n";
    std::cout << "В числе 5 разрядов, у нас 5 рабов. Вот и получили прекрасное сочетание.\n";
    std::cout << "Каждому рабу присвоим собственный разряд по номеру\n";

    std::string slave1, slave2, slave3, slave4, slave5;
    std::cout << "Введите имя первого раба (если нет фантазии - Луций), ему присвоим первый разряд\n";
    std::cin >> slave1;
    std::cout << "Введите имя второго раба (если нет фантазии - Филокал), ему присвоим второй разряд\n";
    std::cin >> slave2;
    std::cout << "Введите имя третьего раба (если нет фантазии - Эрот), ему присвоим третий разряд\n";
    std::cin >> slave3;
    std::cout << "Введите имя четвертого раба (если нет фантазии - Антигон), ему присвоим четвертый разряд\n";
    std::cin >> slave4;
    std::cout << "Введите имя пятого раба (если нет фантазии - Херон), ему присвоим пятый разряд\n";
    std::cin >> slave5;

    std::cout << "Каждая цифра в троичной системе отвечает за одно действие:\n";
    std::cout << "Цифра 0 значит, что раб из этого разряда не будет пить из этой бочки.\n";
    std::cout << "Цифра 1 значит, что раб из этого разряда выпьет из этой бочки в первый день.\n";
    std::cout << "Цифра 2 значит, что раб из этого разряда выпьет из этой бочки во второй день.\n";
    std::cout << "Таким образом, для каждой бочки мы получим уникальный набор умерших в разные дни рабов и точно определим номер отравленной бочки.\n";
    std::cout << "Заканчиваем прелюдии. К делу.\n";

    long long barrel;
    input(barrel);

    std::string ternary_barrel = decimalToTernary(barrel);
    std::cout << "Номер отравленной вами бочки в троичной системе счисления равен " << ternary_barrel << '\n';

    if (ternary_barrel[0] == '1') {
        std::cout << slave1 << " выпьет из отравленной бочки в первый день и умрет в конце первого дня.\n";
    } else if (ternary_barrel[0] == '2') {
        std::cout << slave1 << " выпьет из отравленной бочки во второй день и умрет в конце второго дня.\n";
    }
    
    if (ternary_barrel[1] == '1') {
        std::cout << slave2 << " выпьет из отравленной бочки в первый день и умрет в конце первого дня.\n";
    } else if (ternary_barrel[1] == '2') {
        std::cout << slave2 << " выпьет из отравленной бочки во второй день и умрет в конце второго дня.\n";
    }

    if (ternary_barrel[2] == '1') {
        std::cout << slave3 << " выпьет из отравленной бочки в первый день и умрет в конце первого дня.\n";
    } else if (ternary_barrel[2] == '2') {
        std::cout << slave3 << " выпьет из отравленной бочки во второй день и умрет в конце второго дня.\n";
    }

    if (ternary_barrel[3] == '1') {
        std::cout << slave4 << " выпьет из отравленной бочки в первый день и умрет в конце первого дня.\n";
    } else if (ternary_barrel[3] == '2') {
        std::cout << slave4 << " выпьет из отравленной бочки во второй день и умрет в конце второго дня.\n";
    }

    if (ternary_barrel[4] == '1') {
        std::cout << slave5 << " выпьет из отравленной бочки в первый день и умрет в конце первого дня.\n";
    } else if (ternary_barrel[4] == '2') {
        std::cout << slave5 << " выпьет из отравленной бочки во второй день и умрет в конце второго дня.\n";
    }

    std::cout << "Теперь мы точно знаем в какой бочке яд, так как такой набор смертей только в ней одной.\n";
    int final_barrel = ternaryToDecimal(ternary_barrel);
    std::cout << "Это бочка под номером " << final_barrel << '\n';
    std::cout << "Подведем итог: вы убили рабов, но нашли отравленную бочку. Надеюсь, вы достигли поставленной цели, до свидания!\n";

    return 0;
}   